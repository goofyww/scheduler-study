<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcoox.mmalljob.order.dao.CollectOrderDao">
  <resultMap id="BaseResultMap" type="com.zcoox.mmalljob.order.entity.CollectOrder">
    <constructor>
      <idArg column="_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="third_order_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="del_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    _id, third_order_id, type, total_amount, create_user, create_time, update_user, update_time, 
    del_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_order
    where _id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect_order
    where _id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zcoox.mmalljob.order.entity.CollectOrder">
    insert into collect_order (_id, third_order_id, type, 
      total_amount, create_user, create_time, 
      update_user, update_time, del_state
      )
    values (#{id,jdbcType=INTEGER}, #{thirdOrderId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{delState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zcoox.mmalljob.order.entity.CollectOrder">
    insert into collect_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        _id,
      </if>
      <if test="thirdOrderId != null">
        third_order_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delState != null">
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="thirdOrderId != null">
        #{thirdOrderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null">
        #{delState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcoox.mmalljob.order.entity.CollectOrder">
    update collect_order
    <set>
      <if test="thirdOrderId != null">
        third_order_id = #{thirdOrderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null">
        del_state = #{delState,jdbcType=INTEGER},
      </if>
    </set>
    where _id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcoox.mmalljob.order.entity.CollectOrder">
    update collect_order
    set third_order_id = #{thirdOrderId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_state = #{delState,jdbcType=INTEGER}
    where _id = #{id,jdbcType=INTEGER}
  </update>
</mapper>